#!/bin/bash
# Pre-commit hook for ELLIO Traefik Middleware Plugin
# This hook formats Go code and runs basic validation before committing

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "üîç Running pre-commit hooks..."

# Check if we have Go files to commit
if git diff --cached --name-only | grep -q "\.go$"; then
    echo "üìù Formatting Go code..."

    # Run go fmt
    echo "  Running go fmt..."
    go fmt ./...

    # Run gofumpt if available
    if command -v gofumpt &> /dev/null; then
        echo "  Running gofumpt..."
        gofumpt -w .
    fi

    # Run goimports if available
    if command -v goimports &> /dev/null; then
        echo "  Running goimports..."
        goimports -w .
    fi

    # Run go vet
    echo "  Running go vet..."
    go vet ./...

    # Run go mod tidy
    echo "  Running go mod tidy..."
    go mod tidy

    # Check if go.mod or go.sum were modified
    if git diff --name-only | grep -qE "go\.(mod|sum)$"; then
        echo -e "${YELLOW}‚ö†Ô∏è  go.mod or go.sum were modified. Adding them to the commit...${NC}"
        git add go.mod go.sum
    fi

    # Re-add all Go files that were modified by formatting
    git diff --name-only | grep "\.go$" | xargs -r git add

    # Run tests in short mode
    echo "üß™ Running tests (short mode)..."
    if ! go test -short ./...; then
        echo -e "${RED}‚ùå Tests failed! Please fix the tests before committing.${NC}"
        exit 1
    fi

    # Run golangci-lint if available
    if command -v golangci-lint &> /dev/null; then
        echo "üîç Running golangci-lint..."
        if ! golangci-lint run --fix; then
            echo -e "${YELLOW}‚ö†Ô∏è  golangci-lint found issues. Please review the changes.${NC}"
            # Don't fail on lint issues, just warn
        fi
        # Re-add files that were fixed by golangci-lint
        git diff --name-only | grep "\.go$" | xargs -r git add
    fi
fi

# Check for trailing whitespace
echo "üîç Checking for trailing whitespace..."
if git diff --cached --check; then
    echo -e "${GREEN}‚úÖ No trailing whitespace found${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Trailing whitespace detected. Fixing...${NC}"
    # Remove trailing whitespace from staged files
    git diff --cached --name-only | xargs -r sed -i 's/[[:space:]]*$//'
    git diff --cached --name-only | xargs -r git add
fi

# Check YAML files
if git diff --cached --name-only | grep -q "\.ya?ml$"; then
    echo "üìù Checking YAML files..."
    for file in $(git diff --cached --name-only | grep "\.ya?ml$"); do
        if [ -f "$file" ]; then
            # Basic YAML syntax check using Python if available
            if command -v python3 &> /dev/null; then
                python3 -c "import yaml; yaml.safe_load(open('$file'))" 2>/dev/null || {
                    echo -e "${RED}‚ùå Invalid YAML in $file${NC}"
                    exit 1
                }
            fi
        fi
    done
fi

echo -e "${GREEN}‚úÖ All pre-commit checks passed!${NC}"
